
{"activity": "poll",
    "instructors": ["JunyeHuang"],
    "results_filename": 'answers/error_analysis.results',
    "items": [
         {"id": "1", 
          "question":  '''
    <h4>
    以下の画像は、２量子ビットの校正行列を示しています。これはどのようなノイズが原因ですか？
    <br />
    <br />
    短い減衰時間はノイズの発生が予想される、ということを意味します。
    <br />
    また、Qiskitにおける量子ビットの順序はq1q0です。<img src="http://latex.codecogs.com/svg.latex?\\vert01\\rangle" border="0"/>は、<samp>q1</samp>が<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>、<samp>q0</samp>が<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>ということです。
    <br />
    <img src="questions/error_analysis_images/calib.png"> 
    </h4>
          ''',
          "type": "multiple choice",
          "options": [
           '測定前に、<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>状態の量子ビットが<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>に減衰する。減衰時間は、両方の量子ビットで等しい。',
           '測定前に、<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>状態の量子ビットが<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>に減衰する。<samp>q0</samp>の減衰時間は、<samp>q1</samp>より短い。',
           '測定前に、<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>状態の量子ビットが<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>に減衰する。<samp>q0</samp>の減衰時間は、<samp>q1</samp>より長い',
           '測定前に、<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>状態の量子ビットが<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>に減衰する。<samp>q0</samp>の減衰時間は、<samp>q1</samp>より長い',
           '測定前に、<img src="http://latex.codecogs.com/svg.latex?\\vert1\\rangle" border="0"/>状態の量子ビットが<img src="http://latex.codecogs.com/svg.latex?\\vert0\\rangle" border="0"/>に減衰する。<samp>q0</samp>の減衰時間は、<samp>q1</samp>より短い',
       ]}, 
         {"id": "2", 
          "question":  '''
   <h4>前の質問のキャリブレーション行列で引き起こされたノイズは、<img src="http://latex.codecogs.com/svg.latex?T_1" border="0"/>時間の配列に依存します。ここで、要素<samp>T1[j]</samp>は、測定中の量子ビット<samp>qr[j]</samp>の減衰時間です。これが定義されると、ノイズは次のようにシミュレートされます。
   <pre>

T2 = [1,1] # arbitrarily chosen T2 times
time_measure = 10 # arbitrarily chosen measurement time
noise_thermal = NoiseModel()
for j in range(2):
    noise_thermal.add_quantum_error(thermal_relaxation_error(T1[j], T2[j], time_measure) , "measure", [j])

    </pre>
   
   上に示したものに最も近いキャリブレーション行列を作成する<img src="http://latex.codecogs.com/svg.latex?T_1" border="0"/>時間はどれですか？</h4>
          ''',
          "type": "multiple choice",
          "options": [
           '<samp>[100,30]</samp>',
           '<samp>[50,3]</samp>',
           '<samp>[3,10]</samp>',
           '<samp>[30,100]</samp>',
           '<samp>[1,1000]</samp>',
          ]},
         
          {"id": "3", 
          "question":  '''
   <h4>
   量子ボリュームを計算するために、より大きな量子ビットのセットに連続で適用されるランダム回路に対して、特定の条件が満たされるかどうかをテストします。 これらは、利用可能な任意の量子ビットから作成できます。たとえば、量子ボリュームのチュートリアルでは以下を使用しています。
   <pre>
           qubit_lists = [[0,1,3],[0,1,3,5],[0,1,3,5,7],[0,1,3,5,7,10]]
   </pre>
   前の質問から2量子ビットのノイズモデルを5量子ビットに拡張してみましょう。
   <pre>

n = 5
T1 =  [ j*20 for j in range(1,n+1) ]
T2 = [ 2*t1 for t1 in T1] # T2 times as large as they can be
time_measure = 10 # arbitrarily chosen measurement time
noise_thermal = NoiseModel()
for j in range(n):
    noise_thermal.add_quantum_error( thermal_relaxation_error(T1[j], T2[j], time_measure) , "measure", [j])
   </pre>
   
   各量子ビットの減衰時間を考えると、量子ボリュームを計算するのに最も気の利いたものは次のうちどれですか？</h4>
          ''',
          "type": "multiple choice",
          "options": [
           '<samp>[[0,2,4],[0,2,3,4],[0,1,2,3,4]]</samp>',
           '<samp>[[0,1,2],[0,1,2,3],[0,1,2,3,4]]</samp>',
           '<samp>[[0,2,4],[0,1,2,4],[0,1,2,3,4]]</samp>',
           '<samp>[[2,3,4],[1,2,3,4],[0,1,2,3,4]]</samp>',
           '	',
          ]},    
       ]
   }
   